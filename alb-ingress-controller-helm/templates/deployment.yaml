apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: controller
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "controller.fullname" . }}
spec:
  template:
    metadata:
    {{- if .Values.controller.podAnnotations }}
      annotations:
{{ toYaml .Values.controller.podAnnotations | indent 8}}
    {{- end }}
      labels:
        app: {{ template "name" . }}
        component: controller
        release: {{ .Release.Name }}
      {{- if .Values.controller.podLabels }}
{{ toYaml .Values.controller.podLabels | indent 8}}
      {{- end }}
    spec:
      containers:
        - name: {{ template "name" . }}-controller
          image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag }}"
          imagePullPolicy: "{{ .Values.controller.image.pullPolicy }}"
          args:
            - /server
            - --cluster-name={{ .Values.clusterName }}
          {{- if .Values.scope.ingressClass }}
            - --ingress-class={{ .Values.scope.ingressClass }}
          {{- end }}
          {{- if .Values.scope.singleNamespace }}
            - --watch-namespace={{ default .Release.Namespace .Values.scope.watchNamespace }}
          {{- end }}
          {{- range $key, $value := .Values.extraArgs }}
            - --{{ $key }}={{ $value }}
          {{- end }}
          env:
            - name: AWS_REGION
              value: "{{ .Values.awsRegion }}"
          {{- range $key, $value := .Values.controller.extraEnv }}
            - name: {{ $key }}
              value: "{{ $value }}"
          {{- end }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          ports:
            - containerPort: 10254
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: {{ .Values.controller.readinessProbeInterval }}
            timeoutSeconds: {{ .Values.controller.readinessProbeTimeout }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 60
        {{- if .Values.controller.resources }}
          resources:
{{ toYaml .Values.controller.resources | indent 12 }}
        {{- end }}
        {{- if .Values.sidecarContainers }}
{{ toYaml .Values.sidecarContainers | indent 8}}
        {{- end }}
    {{- if .Values.controller.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.controller.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.controller.tolerations }}
      tolerations:
{{ toYaml .Values.controller.tolerations | indent 8 }}
    {{- end }}
      serviceAccountName: {{ if .Values.rbac.create }}{{ template "fullname" . }}{{ else }}"{{ .Values.rbac.serviceAccountName }}"{{ end }}
      terminationGracePeriodSeconds: 60

