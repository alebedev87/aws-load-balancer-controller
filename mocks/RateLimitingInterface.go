// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// RateLimitingInterface is an autogenerated mock type for the RateLimitingInterface type
type RateLimitingInterface struct {
	mock.Mock
}

// Add provides a mock function with given fields: item
func (_m *RateLimitingInterface) Add(item interface{}) {
	_m.Called(item)
}

// AddAfter provides a mock function with given fields: item, duration
func (_m *RateLimitingInterface) AddAfter(item interface{}, duration time.Duration) {
	_m.Called(item, duration)
}

// AddRateLimited provides a mock function with given fields: item
func (_m *RateLimitingInterface) AddRateLimited(item interface{}) {
	_m.Called(item)
}

// Done provides a mock function with given fields: item
func (_m *RateLimitingInterface) Done(item interface{}) {
	_m.Called(item)
}

// Forget provides a mock function with given fields: item
func (_m *RateLimitingInterface) Forget(item interface{}) {
	_m.Called(item)
}

// Get provides a mock function with given fields:
func (_m *RateLimitingInterface) Get() (interface{}, bool) {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func() bool); ok {
		r1 = rf()
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// Len provides a mock function with given fields:
func (_m *RateLimitingInterface) Len() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// NumRequeues provides a mock function with given fields: item
func (_m *RateLimitingInterface) NumRequeues(item interface{}) int {
	ret := _m.Called(item)

	var r0 int
	if rf, ok := ret.Get(0).(func(interface{}) int); ok {
		r0 = rf(item)
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// ShutDown provides a mock function with given fields:
func (_m *RateLimitingInterface) ShutDown() {
	_m.Called()
}

// ShuttingDown provides a mock function with given fields:
func (_m *RateLimitingInterface) ShuttingDown() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
