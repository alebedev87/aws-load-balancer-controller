// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import ec2 "github.com/aws/aws-sdk-go/service/ec2"
import ec2metadata "github.com/aws/aws-sdk-go/aws/ec2metadata"
import elbv2 "github.com/aws/aws-sdk-go/service/elbv2"
import mock "github.com/stretchr/testify/mock"
import resourcegroupstaggingapi "github.com/aws/aws-sdk-go/service/resourcegroupstaggingapi"
import types "github.com/kubernetes-sigs/aws-alb-ingress-controller/pkg/util/types"
import waf "github.com/aws/aws-sdk-go/service/waf"
import wafregional "github.com/aws/aws-sdk-go/service/wafregional"

// CloudAPI is an autogenerated mock type for the CloudAPI type
type CloudAPI struct {
	mock.Mock
}

// Associate provides a mock function with given fields: resourceArn, webACLId
func (_m *CloudAPI) Associate(resourceArn *string, webACLId *string) (*wafregional.AssociateWebACLOutput, error) {
	ret := _m.Called(resourceArn, webACLId)

	var r0 *wafregional.AssociateWebACLOutput
	if rf, ok := ret.Get(0).(func(*string, *string) *wafregional.AssociateWebACLOutput); ok {
		r0 = rf(resourceArn, webACLId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*wafregional.AssociateWebACLOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*string, *string) error); ok {
		r1 = rf(resourceArn, webACLId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// AuthorizeSecurityGroupIngress provides a mock function with given fields: _a0
func (_m *CloudAPI) AuthorizeSecurityGroupIngress(_a0 *ec2.AuthorizeSecurityGroupIngressInput) (*ec2.AuthorizeSecurityGroupIngressOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ec2.AuthorizeSecurityGroupIngressOutput
	if rf, ok := ret.Get(0).(func(*ec2.AuthorizeSecurityGroupIngressInput) *ec2.AuthorizeSecurityGroupIngressOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ec2.AuthorizeSecurityGroupIngressOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ec2.AuthorizeSecurityGroupIngressInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ClusterSubnets provides a mock function with given fields: scheme
func (_m *CloudAPI) ClusterSubnets(scheme *string) (types.Subnets, error) {
	ret := _m.Called(scheme)

	var r0 types.Subnets
	if rf, ok := ret.Get(0).(func(*string) types.Subnets); ok {
		r0 = rf(scheme)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(types.Subnets)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*string) error); ok {
		r1 = rf(scheme)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateListener provides a mock function with given fields: _a0
func (_m *CloudAPI) CreateListener(_a0 *elbv2.CreateListenerInput) (*elbv2.CreateListenerOutput, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.CreateListenerOutput
	if rf, ok := ret.Get(0).(func(*elbv2.CreateListenerInput) *elbv2.CreateListenerOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.CreateListenerOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*elbv2.CreateListenerInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateLoadBalancer provides a mock function with given fields: _a0
func (_m *CloudAPI) CreateLoadBalancer(_a0 *elbv2.CreateLoadBalancerInput) (*elbv2.CreateLoadBalancerOutput, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.CreateLoadBalancerOutput
	if rf, ok := ret.Get(0).(func(*elbv2.CreateLoadBalancerInput) *elbv2.CreateLoadBalancerOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.CreateLoadBalancerOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*elbv2.CreateLoadBalancerInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateRule provides a mock function with given fields: _a0
func (_m *CloudAPI) CreateRule(_a0 *elbv2.CreateRuleInput) (*elbv2.CreateRuleOutput, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.CreateRuleOutput
	if rf, ok := ret.Get(0).(func(*elbv2.CreateRuleInput) *elbv2.CreateRuleOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.CreateRuleOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*elbv2.CreateRuleInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateSecurityGroup provides a mock function with given fields: _a0
func (_m *CloudAPI) CreateSecurityGroup(_a0 *ec2.CreateSecurityGroupInput) (*ec2.CreateSecurityGroupOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ec2.CreateSecurityGroupOutput
	if rf, ok := ret.Get(0).(func(*ec2.CreateSecurityGroupInput) *ec2.CreateSecurityGroupOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ec2.CreateSecurityGroupOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ec2.CreateSecurityGroupInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateTags provides a mock function with given fields: _a0
func (_m *CloudAPI) CreateTags(_a0 *ec2.CreateTagsInput) (*ec2.CreateTagsOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ec2.CreateTagsOutput
	if rf, ok := ret.Get(0).(func(*ec2.CreateTagsInput) *ec2.CreateTagsOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ec2.CreateTagsOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ec2.CreateTagsInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateTargetGroup provides a mock function with given fields: _a0
func (_m *CloudAPI) CreateTargetGroup(_a0 *elbv2.CreateTargetGroupInput) (*elbv2.CreateTargetGroupOutput, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.CreateTargetGroupOutput
	if rf, ok := ret.Get(0).(func(*elbv2.CreateTargetGroupInput) *elbv2.CreateTargetGroupOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.CreateTargetGroupOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*elbv2.CreateTargetGroupInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteListenersByArn provides a mock function with given fields: lsArn
func (_m *CloudAPI) DeleteListenersByArn(lsArn string) error {
	ret := _m.Called(lsArn)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(lsArn)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteLoadBalancerByArn provides a mock function with given fields: _a0
func (_m *CloudAPI) DeleteLoadBalancerByArn(_a0 string) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteRule provides a mock function with given fields: _a0
func (_m *CloudAPI) DeleteRule(_a0 *elbv2.DeleteRuleInput) (*elbv2.DeleteRuleOutput, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.DeleteRuleOutput
	if rf, ok := ret.Get(0).(func(*elbv2.DeleteRuleInput) *elbv2.DeleteRuleOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.DeleteRuleOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*elbv2.DeleteRuleInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteSecurityGroupByID provides a mock function with given fields: _a0
func (_m *CloudAPI) DeleteSecurityGroupByID(_a0 string) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteTargetGroupByArn provides a mock function with given fields: _a0
func (_m *CloudAPI) DeleteTargetGroupByArn(_a0 string) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeregisterTargets provides a mock function with given fields: _a0
func (_m *CloudAPI) DeregisterTargets(_a0 *elbv2.DeregisterTargetsInput) (*elbv2.DeregisterTargetsOutput, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.DeregisterTargetsOutput
	if rf, ok := ret.Get(0).(func(*elbv2.DeregisterTargetsInput) *elbv2.DeregisterTargetsOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.DeregisterTargetsOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*elbv2.DeregisterTargetsInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeELBV2Tags provides a mock function with given fields: _a0
func (_m *CloudAPI) DescribeELBV2Tags(_a0 *elbv2.DescribeTagsInput) (*elbv2.DescribeTagsOutput, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.DescribeTagsOutput
	if rf, ok := ret.Get(0).(func(*elbv2.DescribeTagsInput) *elbv2.DescribeTagsOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.DescribeTagsOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*elbv2.DescribeTagsInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeLoadBalancerAttributes provides a mock function with given fields: _a0
func (_m *CloudAPI) DescribeLoadBalancerAttributes(_a0 *elbv2.DescribeLoadBalancerAttributesInput) (*elbv2.DescribeLoadBalancerAttributesOutput, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.DescribeLoadBalancerAttributesOutput
	if rf, ok := ret.Get(0).(func(*elbv2.DescribeLoadBalancerAttributesInput) *elbv2.DescribeLoadBalancerAttributesOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.DescribeLoadBalancerAttributesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*elbv2.DescribeLoadBalancerAttributesInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeTargetGroupAttributes provides a mock function with given fields: _a0
func (_m *CloudAPI) DescribeTargetGroupAttributes(_a0 *elbv2.DescribeTargetGroupAttributesInput) (*elbv2.DescribeTargetGroupAttributesOutput, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.DescribeTargetGroupAttributesOutput
	if rf, ok := ret.Get(0).(func(*elbv2.DescribeTargetGroupAttributesInput) *elbv2.DescribeTargetGroupAttributesOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.DescribeTargetGroupAttributesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*elbv2.DescribeTargetGroupAttributesInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeTargetHealth provides a mock function with given fields: _a0
func (_m *CloudAPI) DescribeTargetHealth(_a0 *elbv2.DescribeTargetHealthInput) (*elbv2.DescribeTargetHealthOutput, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.DescribeTargetHealthOutput
	if rf, ok := ret.Get(0).(func(*elbv2.DescribeTargetHealthInput) *elbv2.DescribeTargetHealthOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.DescribeTargetHealthOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*elbv2.DescribeTargetHealthInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Disassociate provides a mock function with given fields: resourceArn
func (_m *CloudAPI) Disassociate(resourceArn *string) (*wafregional.DisassociateWebACLOutput, error) {
	ret := _m.Called(resourceArn)

	var r0 *wafregional.DisassociateWebACLOutput
	if rf, ok := ret.Get(0).(func(*string) *wafregional.DisassociateWebACLOutput); ok {
		r0 = rf(resourceArn)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*wafregional.DisassociateWebACLOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*string) error); ok {
		r1 = rf(resourceArn)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetClusterSubnets provides a mock function with given fields:
func (_m *CloudAPI) GetClusterSubnets() (map[string]types.EC2Tags, error) {
	ret := _m.Called()

	var r0 map[string]types.EC2Tags
	if rf, ok := ret.Get(0).(func() map[string]types.EC2Tags); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]types.EC2Tags)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetInstanceIdentityDocument provides a mock function with given fields:
func (_m *CloudAPI) GetInstanceIdentityDocument() (ec2metadata.EC2InstanceIdentityDocument, error) {
	ret := _m.Called()

	var r0 ec2metadata.EC2InstanceIdentityDocument
	if rf, ok := ret.Get(0).(func() ec2metadata.EC2InstanceIdentityDocument); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(ec2metadata.EC2InstanceIdentityDocument)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetInstancesByIDs provides a mock function with given fields: _a0
func (_m *CloudAPI) GetInstancesByIDs(_a0 []string) ([]*ec2.Instance, error) {
	ret := _m.Called(_a0)

	var r0 []*ec2.Instance
	if rf, ok := ret.Get(0).(func([]string) []*ec2.Instance); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*ec2.Instance)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetLoadBalancerByArn provides a mock function with given fields: _a0
func (_m *CloudAPI) GetLoadBalancerByArn(_a0 string) (*elbv2.LoadBalancer, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.LoadBalancer
	if rf, ok := ret.Get(0).(func(string) *elbv2.LoadBalancer); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.LoadBalancer)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetLoadBalancerByName provides a mock function with given fields: _a0
func (_m *CloudAPI) GetLoadBalancerByName(_a0 string) (*elbv2.LoadBalancer, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.LoadBalancer
	if rf, ok := ret.Get(0).(func(string) *elbv2.LoadBalancer); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.LoadBalancer)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetResourcesByFilters provides a mock function with given fields: tagFilters, resourceTypeFilters
func (_m *CloudAPI) GetResourcesByFilters(tagFilters map[string][]string, resourceTypeFilters ...string) ([]string, error) {
	_va := make([]interface{}, len(resourceTypeFilters))
	for _i := range resourceTypeFilters {
		_va[_i] = resourceTypeFilters[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, tagFilters)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 []string
	if rf, ok := ret.Get(0).(func(map[string][]string, ...string) []string); ok {
		r0 = rf(tagFilters, resourceTypeFilters...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(map[string][]string, ...string) error); ok {
		r1 = rf(tagFilters, resourceTypeFilters...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetRules provides a mock function with given fields: _a0
func (_m *CloudAPI) GetRules(_a0 string) ([]*elbv2.Rule, error) {
	ret := _m.Called(_a0)

	var r0 []*elbv2.Rule
	if rf, ok := ret.Get(0).(func(string) []*elbv2.Rule); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*elbv2.Rule)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSecurityGroupByID provides a mock function with given fields: _a0
func (_m *CloudAPI) GetSecurityGroupByID(_a0 string) (*ec2.SecurityGroup, error) {
	ret := _m.Called(_a0)

	var r0 *ec2.SecurityGroup
	if rf, ok := ret.Get(0).(func(string) *ec2.SecurityGroup); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ec2.SecurityGroup)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSecurityGroupByName provides a mock function with given fields: _a0, _a1
func (_m *CloudAPI) GetSecurityGroupByName(_a0 string, _a1 string) (*ec2.SecurityGroup, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *ec2.SecurityGroup
	if rf, ok := ret.Get(0).(func(string, string) *ec2.SecurityGroup); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ec2.SecurityGroup)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSecurityGroups provides a mock function with given fields: names
func (_m *CloudAPI) GetSecurityGroups(names []*string) ([]*string, error) {
	ret := _m.Called(names)

	var r0 []*string
	if rf, ok := ret.Get(0).(func([]*string) []*string); ok {
		r0 = rf(names)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]*string) error); ok {
		r1 = rf(names)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSubnets provides a mock function with given fields: _a0
func (_m *CloudAPI) GetSubnets(_a0 []*string) ([]*string, error) {
	ret := _m.Called(_a0)

	var r0 []*string
	if rf, ok := ret.Get(0).(func([]*string) []*string); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]*string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTargetGroupByArn provides a mock function with given fields: _a0
func (_m *CloudAPI) GetTargetGroupByArn(_a0 string) (*elbv2.TargetGroup, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.TargetGroup
	if rf, ok := ret.Get(0).(func(string) *elbv2.TargetGroup); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.TargetGroup)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTargetGroupByName provides a mock function with given fields: _a0
func (_m *CloudAPI) GetTargetGroupByName(_a0 string) (*elbv2.TargetGroup, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.TargetGroup
	if rf, ok := ret.Get(0).(func(string) *elbv2.TargetGroup); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.TargetGroup)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetVPC provides a mock function with given fields: _a0
func (_m *CloudAPI) GetVPC(_a0 *string) (*ec2.Vpc, error) {
	ret := _m.Called(_a0)

	var r0 *ec2.Vpc
	if rf, ok := ret.Get(0).(func(*string) *ec2.Vpc); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ec2.Vpc)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetVPCID provides a mock function with given fields:
func (_m *CloudAPI) GetVPCID() (*string, error) {
	ret := _m.Called()

	var r0 *string
	if rf, ok := ret.Get(0).(func() *string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetWebACLSummary provides a mock function with given fields: resourceArn
func (_m *CloudAPI) GetWebACLSummary(resourceArn *string) (*waf.WebACLSummary, error) {
	ret := _m.Called(resourceArn)

	var r0 *waf.WebACLSummary
	if rf, ok := ret.Get(0).(func(*string) *waf.WebACLSummary); ok {
		r0 = rf(resourceArn)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*waf.WebACLSummary)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*string) error); ok {
		r1 = rf(resourceArn)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// IsNodeHealthy provides a mock function with given fields: _a0
func (_m *CloudAPI) IsNodeHealthy(_a0 string) (bool, error) {
	ret := _m.Called(_a0)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListListenersByLoadBalancer provides a mock function with given fields: lbArn
func (_m *CloudAPI) ListListenersByLoadBalancer(lbArn string) ([]*elbv2.Listener, error) {
	ret := _m.Called(lbArn)

	var r0 []*elbv2.Listener
	if rf, ok := ret.Get(0).(func(string) []*elbv2.Listener); ok {
		r0 = rf(lbArn)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*elbv2.Listener)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(lbArn)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ModifyListener provides a mock function with given fields: _a0
func (_m *CloudAPI) ModifyListener(_a0 *elbv2.ModifyListenerInput) (*elbv2.ModifyListenerOutput, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.ModifyListenerOutput
	if rf, ok := ret.Get(0).(func(*elbv2.ModifyListenerInput) *elbv2.ModifyListenerOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.ModifyListenerOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*elbv2.ModifyListenerInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ModifyLoadBalancerAttributes provides a mock function with given fields: _a0
func (_m *CloudAPI) ModifyLoadBalancerAttributes(_a0 *elbv2.ModifyLoadBalancerAttributesInput) (*elbv2.ModifyLoadBalancerAttributesOutput, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.ModifyLoadBalancerAttributesOutput
	if rf, ok := ret.Get(0).(func(*elbv2.ModifyLoadBalancerAttributesInput) *elbv2.ModifyLoadBalancerAttributesOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.ModifyLoadBalancerAttributesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*elbv2.ModifyLoadBalancerAttributesInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ModifyNetworkInterfaceAttribute provides a mock function with given fields: _a0
func (_m *CloudAPI) ModifyNetworkInterfaceAttribute(_a0 *ec2.ModifyNetworkInterfaceAttributeInput) (*ec2.ModifyNetworkInterfaceAttributeOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ec2.ModifyNetworkInterfaceAttributeOutput
	if rf, ok := ret.Get(0).(func(*ec2.ModifyNetworkInterfaceAttributeInput) *ec2.ModifyNetworkInterfaceAttributeOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ec2.ModifyNetworkInterfaceAttributeOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ec2.ModifyNetworkInterfaceAttributeInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ModifyRule provides a mock function with given fields: _a0
func (_m *CloudAPI) ModifyRule(_a0 *elbv2.ModifyRuleInput) (*elbv2.ModifyRuleOutput, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.ModifyRuleOutput
	if rf, ok := ret.Get(0).(func(*elbv2.ModifyRuleInput) *elbv2.ModifyRuleOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.ModifyRuleOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*elbv2.ModifyRuleInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ModifyTargetGroup provides a mock function with given fields: _a0
func (_m *CloudAPI) ModifyTargetGroup(_a0 *elbv2.ModifyTargetGroupInput) (*elbv2.ModifyTargetGroupOutput, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.ModifyTargetGroupOutput
	if rf, ok := ret.Get(0).(func(*elbv2.ModifyTargetGroupInput) *elbv2.ModifyTargetGroupOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.ModifyTargetGroupOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*elbv2.ModifyTargetGroupInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ModifyTargetGroupAttributes provides a mock function with given fields: _a0
func (_m *CloudAPI) ModifyTargetGroupAttributes(_a0 *elbv2.ModifyTargetGroupAttributesInput) (*elbv2.ModifyTargetGroupAttributesOutput, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.ModifyTargetGroupAttributesOutput
	if rf, ok := ret.Get(0).(func(*elbv2.ModifyTargetGroupAttributesInput) *elbv2.ModifyTargetGroupAttributesOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.ModifyTargetGroupAttributesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*elbv2.ModifyTargetGroupAttributesInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RegisterTargets provides a mock function with given fields: _a0
func (_m *CloudAPI) RegisterTargets(_a0 *elbv2.RegisterTargetsInput) (*elbv2.RegisterTargetsOutput, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.RegisterTargetsOutput
	if rf, ok := ret.Get(0).(func(*elbv2.RegisterTargetsInput) *elbv2.RegisterTargetsOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.RegisterTargetsOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*elbv2.RegisterTargetsInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RemoveListener provides a mock function with given fields: arn
func (_m *CloudAPI) RemoveListener(arn *string) error {
	ret := _m.Called(arn)

	var r0 error
	if rf, ok := ret.Get(0).(func(*string) error); ok {
		r0 = rf(arn)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RemoveTargetGroup provides a mock function with given fields: arn
func (_m *CloudAPI) RemoveTargetGroup(arn *string) error {
	ret := _m.Called(arn)

	var r0 error
	if rf, ok := ret.Get(0).(func(*string) error); ok {
		r0 = rf(arn)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RevokeSecurityGroupIngress provides a mock function with given fields: _a0
func (_m *CloudAPI) RevokeSecurityGroupIngress(_a0 *ec2.RevokeSecurityGroupIngressInput) (*ec2.RevokeSecurityGroupIngressOutput, error) {
	ret := _m.Called(_a0)

	var r0 *ec2.RevokeSecurityGroupIngressOutput
	if rf, ok := ret.Get(0).(func(*ec2.RevokeSecurityGroupIngressInput) *ec2.RevokeSecurityGroupIngressOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ec2.RevokeSecurityGroupIngressOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ec2.RevokeSecurityGroupIngressInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetIpAddressType provides a mock function with given fields: _a0
func (_m *CloudAPI) SetIpAddressType(_a0 *elbv2.SetIpAddressTypeInput) (*elbv2.SetIpAddressTypeOutput, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.SetIpAddressTypeOutput
	if rf, ok := ret.Get(0).(func(*elbv2.SetIpAddressTypeInput) *elbv2.SetIpAddressTypeOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.SetIpAddressTypeOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*elbv2.SetIpAddressTypeInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetSecurityGroups provides a mock function with given fields: _a0
func (_m *CloudAPI) SetSecurityGroups(_a0 *elbv2.SetSecurityGroupsInput) (*elbv2.SetSecurityGroupsOutput, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.SetSecurityGroupsOutput
	if rf, ok := ret.Get(0).(func(*elbv2.SetSecurityGroupsInput) *elbv2.SetSecurityGroupsOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.SetSecurityGroupsOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*elbv2.SetSecurityGroupsInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetSubnets provides a mock function with given fields: _a0
func (_m *CloudAPI) SetSubnets(_a0 *elbv2.SetSubnetsInput) (*elbv2.SetSubnetsOutput, error) {
	ret := _m.Called(_a0)

	var r0 *elbv2.SetSubnetsOutput
	if rf, ok := ret.Get(0).(func(*elbv2.SetSubnetsInput) *elbv2.SetSubnetsOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elbv2.SetSubnetsOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*elbv2.SetSubnetsInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StatusACM provides a mock function with given fields:
func (_m *CloudAPI) StatusACM() func() error {
	ret := _m.Called()

	var r0 func() error
	if rf, ok := ret.Get(0).(func() func() error); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func() error)
		}
	}

	return r0
}

// StatusEC2 provides a mock function with given fields:
func (_m *CloudAPI) StatusEC2() func() error {
	ret := _m.Called()

	var r0 func() error
	if rf, ok := ret.Get(0).(func() func() error); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func() error)
		}
	}

	return r0
}

// StatusELBV2 provides a mock function with given fields:
func (_m *CloudAPI) StatusELBV2() func() error {
	ret := _m.Called()

	var r0 func() error
	if rf, ok := ret.Get(0).(func() func() error); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func() error)
		}
	}

	return r0
}

// StatusIAM provides a mock function with given fields:
func (_m *CloudAPI) StatusIAM() func() error {
	ret := _m.Called()

	var r0 func() error
	if rf, ok := ret.Get(0).(func() func() error); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func() error)
		}
	}

	return r0
}

// TagResources provides a mock function with given fields: _a0
func (_m *CloudAPI) TagResources(_a0 *resourcegroupstaggingapi.TagResourcesInput) (*resourcegroupstaggingapi.TagResourcesOutput, error) {
	ret := _m.Called(_a0)

	var r0 *resourcegroupstaggingapi.TagResourcesOutput
	if rf, ok := ret.Get(0).(func(*resourcegroupstaggingapi.TagResourcesInput) *resourcegroupstaggingapi.TagResourcesOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*resourcegroupstaggingapi.TagResourcesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*resourcegroupstaggingapi.TagResourcesInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UntagResources provides a mock function with given fields: _a0
func (_m *CloudAPI) UntagResources(_a0 *resourcegroupstaggingapi.UntagResourcesInput) (*resourcegroupstaggingapi.UntagResourcesOutput, error) {
	ret := _m.Called(_a0)

	var r0 *resourcegroupstaggingapi.UntagResourcesOutput
	if rf, ok := ret.Get(0).(func(*resourcegroupstaggingapi.UntagResourcesInput) *resourcegroupstaggingapi.UntagResourcesOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*resourcegroupstaggingapi.UntagResourcesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*resourcegroupstaggingapi.UntagResourcesInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// WebACLExists provides a mock function with given fields: webACLId
func (_m *CloudAPI) WebACLExists(webACLId *string) (bool, error) {
	ret := _m.Called(webACLId)

	var r0 bool
	if rf, ok := ret.Get(0).(func(*string) bool); ok {
		r0 = rf(webACLId)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*string) error); ok {
		r1 = rf(webACLId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
