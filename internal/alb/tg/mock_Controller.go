// Code generated by mockery v1.0.0. DO NOT EDIT.

package tg

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	v1beta1 "k8s.io/api/extensions/v1beta1"
)

// MockController is an autogenerated mock type for the Controller type
type MockController struct {
	mock.Mock
}

// Reconcile provides a mock function with given fields: ctx, ingress, backend
func (_m *MockController) Reconcile(ctx context.Context, ingress *v1beta1.Ingress, backend v1beta1.IngressBackend) (TargetGroup, error) {
	ret := _m.Called(ctx, ingress, backend)

	var r0 TargetGroup
	if rf, ok := ret.Get(0).(func(context.Context, *v1beta1.Ingress, v1beta1.IngressBackend) TargetGroup); ok {
		r0 = rf(ctx, ingress, backend)
	} else {
		r0 = ret.Get(0).(TargetGroup)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *v1beta1.Ingress, v1beta1.IngressBackend) error); ok {
		r1 = rf(ctx, ingress, backend)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

func (_m *MockController) StopReconcilingPodConditionStatus(_a0 string) {
	_m.Called(_a0)
}
